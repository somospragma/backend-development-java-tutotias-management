openapi: 3.0.3
info:
  title: Sistema de Tutorías API
  description: |
    API REST para el Sistema de Tutorías que facilita la gestión de tutorías entre tutores y tutorados.
    
    El sistema está desarrollado con Spring Boot siguiendo la Arquitectura Hexagonal y permite:
    - Gestión de usuarios (tutores, tutorados, administradores) con integración externa
    - Solicitudes de tutoría con estados avanzados (Conversando, Solicitud_Cancelacion)
    - Asignación y gestión de tutorías con vista detallada
    - Programación de sesiones de tutoría
    - Sistema de retroalimentación con evaluador automático
    - Gestión de habilidades y capítulos
    - Filtros avanzados y búsquedas con operadores OR
    - Autenticación basada en Google ID con contexto de usuario
    - Vista detallada de tutorías con sesiones y feedbacks integrados
  version: 2.0.0
  contact:
    name: Sistema de Tutorías
    email: support@sistematutorias.com
  license:
    name: Propietaria
servers:
  - url: http://localhost:8080
    description: Servidor de desarrollo
  - url: http://pragma-tutorias-dev-alb-tutorias-1944959947.us-east-1.elb.amazonaws.com:8080
    description: Servidor de aws

security:
  - GoogleAuth: []

tags:
  - name: Users
    description: Gestión de usuarios del sistema
  - name: Chapters
    description: Gestión de capítulos/departamentos
  - name: Skills
    description: Gestión de habilidades
  - name: Tutoring Requests
    description: Gestión de solicitudes de tutoría
  - name: Tutorings
    description: Gestión de tutorías
  - name: Tutoring Sessions
    description: Gestión de sesiones de tutoría
  - name: Feedbacks
    description: Gestión de retroalimentación
  - name: Statistics
    description: Estadísticas del sistema
  - name: Profile
    description: Información de perfil y contexto de usuario
  - name: Health
    description: Endpoints de monitoreo y salud de la aplicación

paths:
  # Users endpoints
  /api/v1/users:
    post:
      tags:
        - Users
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario en el sistema (solo administradores)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '409':
          description: Conflicto - Usuario ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
              examples:
                duplicate_google_id:
                  summary: Google ID duplicado
                  value:
                    message: "User with this Google ID already exists"
                    timestamp: "2024-01-15T10:30:00Z"
                duplicate_email:
                  summary: Email duplicado
                  value:
                    message: "User with this email already exists"
                    timestamp: "2024-01-15T10:30:00Z"
    get:
      tags:
        - Users
      summary: Obtener todos los usuarios con conteo de tutorías
      description: |
        Obtiene la lista de todos los usuarios con información de tutorías activas.
        Incluye filtros avanzados con operadores OR para búsqueda flexible.
        Solo disponible para administradores.
      parameters:
        - name: chapterId
          in: query
          schema:
            type: string
          description: ID del capítulo para filtrar
        - name: rol
          in: query
          schema:
            type: string
          description: Rol del usuario (búsqueda parcial con LIKE)
        - name: seniority
          in: query
          schema:
            type: integer
          description: Nivel de seniority para filtrar
        - name: email
          in: query
          schema:
            type: string
          description: Email del usuario (búsqueda parcial)
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseUserWithTutoringCountList'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Se requieren privilegios de administrador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
    put:
      tags:
        - Users
      summary: Actualizar un usuario
      description: Actualiza la información de un usuario existente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequestDto'
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Usuario no encontrado

  /api/v1/users/{id}:
    get:
      tags:
        - Users
      summary: Obtener usuario por ID
      description: Obtiene la información de un usuario específico
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Usuario no encontrado

  /api/v1/users/me:
    get:
      tags:
        - Users
      summary: Obtener perfil del usuario actual
      description: Obtiene la información del usuario autenticado actualmente
      responses:
        '200':
          description: Perfil del usuario actual
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseUser'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'

  /api/v1/users/role:
    patch:
      tags:
        - Users
      summary: Actualizar rol de usuario
      description: Actualiza el rol de un usuario específico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRoleDto'
      responses:
        '200':
          description: Rol actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Usuario no encontrado

  /api/v1/users/tutoring-limit:
    patch:
      tags:
        - Users
      summary: Actualizar límite de tutorías
      description: Actualiza el límite de tutorías activas de un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTutoringLimitDto'
      responses:
        '200':
          description: Límite actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema o operación no permitida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Usuario no encontrado

  # Chapters endpoints
  /api/v1/chapter/:
    get:
      tags:
        - Chapters
      summary: Obtener todos los capítulos
      description: Obtiene la lista de todos los capítulos disponibles
      responses:
        '200':
          description: Lista de capítulos obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseChapterList'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
    post:
      tags:
        - Chapters
      summary: Crear un nuevo capítulo
      description: Crea un nuevo capítulo en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChapterDto'
      responses:
        '201':
          description: Capítulo creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseChapter'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'

  /api/v1/chapter/{id}:
    get:
      tags:
        - Chapters
      summary: Obtener capítulo por ID
      description: Obtiene la información de un capítulo específico
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del capítulo
      responses:
        '200':
          description: Capítulo encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseChapter'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Capítulo no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseChapter'

  # Skills endpoints
  /api/v1/skills:
    post:
      tags:
        - Skills
      summary: Crear una nueva habilidad
      description: Crea una nueva habilidad en el sistema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSkillDto'
      responses:
        '201':
          description: Habilidad creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseSkill'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
    get:
      tags:
        - Skills
      summary: Obtener todas las habilidades
      description: Obtiene la lista de todas las habilidades disponibles
      responses:
        '200':
          description: Lista de habilidades obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseSkillList'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
    put:
      tags:
        - Skills
      summary: Actualizar una habilidad
      description: Actualiza la información de una habilidad existente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSkillDto'
      responses:
        '200':
          description: Habilidad actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseSkill'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Habilidad no encontrada

  /api/v1/skills/{id}:
    get:
      tags:
        - Skills
      summary: Obtener habilidad por ID
      description: Obtiene la información de una habilidad específica
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la habilidad
      responses:
        '200':
          description: Habilidad encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseSkill'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Habilidad no encontrada
    delete:
      tags:
        - Skills
      summary: Eliminar una habilidad
      description: Elimina una habilidad del sistema
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la habilidad
      responses:
        '200':
          description: Habilidad eliminada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseVoid'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Habilidad no encontrada

  # Tutoring Requests endpoints
  /api/v1/tutoring-requests:
    post:
      tags:
        - Tutoring Requests
      summary: Crear una solicitud de tutoría
      description: Crea una nueva solicitud de tutoría
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTutoringRequestDto'
      responses:
        '201':
          description: Solicitud de tutoría creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseTutoringRequest'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
    get:
      tags:
        - Tutoring Requests
      summary: Obtener solicitudes de tutoría
      description: Obtiene las solicitudes de tutoría con filtros opcionales
      parameters:
        - name: tuteeId
          in: query
          schema:
            type: string
          description: ID del tutorado para filtrar
        - name: skillId
          in: query
          schema:
            type: string
          description: ID de la habilidad para filtrar
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/RequestStatus'
          description: Estado de la solicitud para filtrar
        - name: chapterId
          in: query
          schema:
            type: string
          description: ID del capítulo para filtrar
      responses:
        '200':
          description: Lista de solicitudes obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseTutoringRequestList'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'

  /api/v1/tutoring-requests/{requestId}/status:
    patch:
      tags:
        - Tutoring Requests
      summary: Actualizar estado de solicitud
      description: Actualiza el estado de una solicitud de tutoría
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
          description: ID de la solicitud
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTutoringRequestStatusDto'
      responses:
        '200':
          description: Estado actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseTutoringRequest'
        '400':
          description: Estado inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Solicitud no encontrada

  /api/v1/tutoring-requests/my-requests:
    get:
      tags:
        - Tutoring Requests
      summary: Obtener mis solicitudes de tutoría
      description: Obtiene las solicitudes de tutoría del usuario actual
      responses:
        '200':
          description: Mis solicitudes y tutorías obtenidas exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseMyRequests'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'

  # Tutorings endpoints
  /api/v1/tutorings:
    post:
      tags:
        - Tutorings
      summary: Crear una tutoría
      description: Crea una nueva tutoría asignando un tutor a una solicitud
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTutoringDto'
      responses:
        '201':
          description: Tutoría creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseTutoring'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
    get:
      tags:
        - Tutorings
      summary: Obtener todas las tutorías
      description: |
        Obtiene la lista completa de todas las tutorías en el sistema.
        Retorna información básica de cada tutoría incluyendo tutor, tutorado, 
        habilidades, fechas y estado actual.
      responses:
        '200':
          description: Lista de tutorías obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseTutoringList'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'

  /api/v1/tutorings/{tutoringId}/complete:
    patch:
      tags:
        - Tutorings
      summary: Completar una tutoría
      description: Marca una tutoría como completada
      parameters:
        - name: tutoringId
          in: path
          required: true
          schema:
            type: string
          description: ID de la tutoría
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTutoringDto'
      responses:
        '200':
          description: Tutoría completada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseTutoring'
        '400':
          description: Operación no válida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Tutoría no encontrada

  /api/v1/tutorings/{tutoringId}/cancel:
    patch:
      tags:
        - Tutorings
      summary: Cancelar una tutoría
      description: Cancela una tutoría activa
      parameters:
        - name: tutoringId
          in: path
          required: true
          schema:
            type: string
          description: ID de la tutoría
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTutoringStatusDto'
      responses:
        '200':
          description: Tutoría cancelada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseTutoring'
        '400':
          description: Operación no válida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Tutoría no encontrada

  /api/v1/tutorings/{id}/details:
    get:
      tags:
        - Tutorings
      summary: Obtener vista detallada de tutoría
      description: |
        Obtiene información completa de una tutoría incluyendo:
        - Datos básicos de la tutoría
        - Lista de sesiones asociadas
        - Feedbacks recibidos
        - Información completa de tutor y tutorado
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la tutoría
      responses:
        '200':
          description: Vista detallada obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseTutoringDetail'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Tutoría no encontrada

  # Tutoring Sessions endpoints
  /api/v1/tutoring-sessions:
    post:
      tags:
        - Tutoring Sessions
      summary: Crear una sesión de tutoría
      description: Programa una nueva sesión de tutoría
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTutoringSessionDto'
      responses:
        '201':
          description: Sesión creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseTutoringSession'
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'

  /api/v1/tutoring-sessions/{id}/status:
    patch:
      tags:
        - Tutoring Sessions
      summary: Actualizar estado de sesión
      description: Actualiza el estado de una sesión de tutoría
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTutoringSessionStatusDto'
      responses:
        '200':
          description: Estado actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseTutoringSession'
        '400':
          description: Estado inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Sesión no encontrada

  # Feedbacks endpoints
  /api/v1/feedbacks:
    post:
      tags:
        - Feedbacks
      summary: Crear retroalimentación
      description: |
        Crea una nueva retroalimentación para una tutoría.
        
        **Nota importante**: El evaluador se asigna automáticamente desde el contexto 
        del usuario autenticado. No es necesario enviar `evaluatorId` en el body.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedbackDto'
            example:
              tutoringId: "tutoring-123"
              score: "5"
              comments: "Excelente tutoría, muy útil para mi aprendizaje"
      responses:
        '201':
          description: Retroalimentación creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseFeedback'
              example:
                message: "Feedback creado exitosamente"
                data:
                  id: "feedback-456"
                  evaluator:
                    id: "user-789"
                    firstName: "María"
                    lastName: "García"
                    email: "maria.garcia@example.com"
                  evaluationDate: "2024-01-15T14:30:00Z"
                  tutoring:
                    id: "tutoring-123"
                    status: "COMPLETADA"
                  score: "5"
                  comments: "Excelente tutoría, muy útil para mi aprendizaje"
                timestamp: "2024-01-15T14:30:00Z"
        '400':
          description: Datos de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
              example:
                message: "Validation failed"
                errors:
                  tutoringId: "Tutoría no encontrada"
                  score: "Score es requerido"
                timestamp: "2024-01-15T14:30:00Z"
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '404':
          description: Tutoría no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
              example:
                message: "Tutoría no encontrada con ID: tutoring-123"
                timestamp: "2024-01-15T14:30:00Z"

  # Profile endpoints (for testing and user context)
  /api/v1/profile/me:
    get:
      tags:
        - Profile
      summary: Obtener perfil del usuario actual
      description: Obtiene información del perfil del usuario autenticado
      responses:
        '200':
          description: Perfil obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseProfile'
        '401':
          description: Usuario no autenticado

  /api/v1/profile/permissions:
    get:
      tags:
        - Profile
      summary: Obtener permisos del usuario
      description: Obtiene los permisos y capacidades del usuario actual
      responses:
        '200':
          description: Permisos obtenidos exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponsePermissions'
        '401':
          description: Usuario no autenticado

  /api/v1/profile/context-status:
    get:
      tags:
        - Profile
      summary: Obtener estado del contexto de usuario
      description: Obtiene información sobre el estado del contexto de autenticación
      responses:
        '200':
          description: Estado del contexto obtenido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseContextStatus'

  /api/v1/profile/admin-info:
    get:
      tags:
        - Profile
      summary: Obtener información de administrador
      description: Endpoint exclusivo para administradores
      responses:
        '200':
          description: Información de administrador obtenida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseAdminInfo'
        '401':
          description: Usuario no autenticado
        '403':
          description: Acceso denegado - se requieren privilegios de administrador

  /api/v1/profile/user/{userId}/access-check:
    get:
      tags:
        - Profile
      summary: Verificar acceso a recurso de usuario
      description: Verifica si el usuario actual puede acceder a un recurso específico
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario a verificar
      responses:
        '200':
          description: Verificación de acceso completada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponseAccessCheck'
        '401':
          description: Usuario no autenticado

  /api/v1/profile/public-info:
    get:
      tags:
        - Profile
      summary: Obtener información pública
      description: Endpoint público que funciona con o sin autenticación
      security: []
      responses:
        '200':
          description: Información pública obtenida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkResponsePublicInfo'

  # Health Check endpoints
  /actuator/health:
    get:
      tags:
        - Health
      summary: Health Check
      description: Endpoint de verificación de salud de la aplicación
      security: []
      responses:
        '200':
          description: Aplicación funcionando correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: UP
        '503':
          description: Aplicación no disponible
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: DOWN

  # Statistics endpoints
  /api/v1/statistics/dashboard:
    get:
      tags:
        - Statistics
      summary: Obtener estadísticas del dashboard
      description: Obtiene estadísticas generales del sistema para el dashboard
      parameters:
        - name: chapterId
          in: query
          required: false
          schema:
            type: string
          description: ID del capítulo para filtrar estadísticas
      responses:
        '200':
          description: Estadísticas obtenidas exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStatisticsResponseDto'
        '401':
          description: No autorizado - Token de autenticación faltante o inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'
        '403':
          description: Prohibido - Usuario no registrado en el sistema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationErrorDto'

components:
  securitySchemes:
    GoogleAuth:
      type: apiKey
      in: header
      name: Authorization
      description: |
        Google User ID para autenticación. 
        
        **Formato:** Enviar directamente el Google User ID en el header Authorization.
        
        **Ejemplo:** `Authorization: 1234567890123456789`
        
        **Nota:** En un entorno de producción, esto sería típicamente un JWT token.

  schemas:
    # User schemas
    UserDto:
      type: object
      properties:
        id:
          type: string
          description: ID único del usuario
        firstName:
          type: string
          description: Nombre del usuario
        lastName:
          type: string
          description: Apellido del usuario
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
        slackId:
          type: string
          description: ID de Slack del usuario
        chapter:
          $ref: '#/components/schemas/ChapterDto'
        rol:
          $ref: '#/components/schemas/RolUsuario'
        activeTutoringLimit:
          type: integer
          description: Límite de tutorías activas
        seniority:
          type: integer
          description: Nivel de seniority del usuario

    CreateUserDto:
      type: object
      required:
        - firstName
        - lastName
        - email
        - googleUserId
        - chapterId
      properties:
        firstName:
          type: string
          description: Nombre del usuario
        lastName:
          type: string
          description: Apellido del usuario
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
        googleUserId:
          type: string
          description: ID de Google del usuario
        chapterId:
          type: string
          description: ID del capítulo al que pertenece
        seniority:
          type: integer
          description: Nivel de seniority del usuario

    UpdateUserRequestDto:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: ID del usuario a actualizar
        firstName:
          type: string
          description: Nombre del usuario
        lastName:
          type: string
          description: Apellido del usuario
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
        chapterId:
          type: string
          description: ID del capítulo

    UpdateUserRoleDto:
      type: object
      required:
        - id
        - role
      properties:
        id:
          type: string
          description: ID del usuario
        role:
          $ref: '#/components/schemas/RolUsuario'

    UpdateTutoringLimitDto:
      type: object
      required:
        - id
        - activeTutoringLimit
      properties:
        id:
          type: string
          description: ID del usuario
        activeTutoringLimit:
          type: integer
          minimum: 0
          description: Nuevo límite de tutorías activas

    # Chapter schemas
    ChapterDto:
      type: object
      properties:
        id:
          type: string
          description: ID único del capítulo
        name:
          type: string
          description: Nombre del capítulo

    CreateChapterDto:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Nombre del capítulo

    # Skill schemas
    SkillDto:
      type: object
      properties:
        id:
          type: string
          description: ID único de la habilidad
        name:
          type: string
          description: Nombre de la habilidad

    CreateSkillDto:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Nombre de la habilidad

    UpdateSkillDto:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: ID de la habilidad
        name:
          type: string
          description: Nombre de la habilidad

    # Tutoring Request schemas
    TutoringRequestDto:
      type: object
      properties:
        id:
          type: string
          description: ID único de la solicitud
        tutee:
          $ref: '#/components/schemas/UserDto'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillDto'
        needsDescription:
          type: string
          description: Descripción de las necesidades
        requestStatus:
          $ref: '#/components/schemas/RequestStatus'

    CreateTutoringRequestDto:
      type: object
      required:
        - tuteeId
        - needsDescription
      properties:
        tuteeId:
          type: string
          description: ID del estudiante que solicita
        skillIds:
          type: array
          items:
            type: string
          description: Lista de IDs de habilidades
        needsDescription:
          type: string
          description: Descripción de las necesidades

    UpdateTutoringRequestStatusDto:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/RequestStatus'

    # Tutoring schemas
    TutoringDto:
      type: object
      properties:
        id:
          type: string
          description: ID único de la tutoría
        tutor:
          $ref: '#/components/schemas/UserDto'
        tutee:
          $ref: '#/components/schemas/UserDto'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillDto'
        startDate:
          type: string
          format: date-time
          description: Fecha de inicio
        expectedEndDate:
          type: string
          format: date-time
          description: Fecha esperada de finalización
        status:
          $ref: '#/components/schemas/TutoringStatus'
        objectives:
          type: string
          description: Objetivos de la tutoría

    CreateTutoringDto:
      type: object
      required:
        - tutoringRequestId
        - tutorId
        - objectives
      properties:
        tutoringRequestId:
          type: string
          description: ID de la solicitud de tutoría
        tutorId:
          type: string
          description: ID del tutor asignado
        objectives:
          type: string
          description: Objetivos de la tutoría

    UpdateTutoringStatusDto:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          description: ID del usuario que realiza la acción
        comments:
          type: string
          description: Comentarios adicionales

    CompleteTutoringDto:
      type: object
      required:
        - userId
        - finalActUrl
      properties:
        userId:
          type: string
          description: ID del usuario que completa la tutoría
        finalActUrl:
          type: string
          description: URL del acta final de la tutoría

    # Tutoring Session schemas
    TutoringSessionDto:
      type: object
      properties:
        id:
          type: string
          description: ID único de la sesión
        datetime:
          type: string
          description: Fecha y hora de la sesión
        durationMinutes:
          type: integer
          description: Duración en minutos
        locationLink:
          type: string
          description: Enlace de ubicación/reunión
        topicsCovered:
          type: string
          description: Temas cubiertos
        notes:
          type: string
          description: Notas de la sesión
        sessionStatus:
          $ref: '#/components/schemas/TutoringsSessionStatus'

    CreateTutoringSessionDto:
      type: object
      required:
        - tutoringId
        - datetime
        - durationMinutes
      properties:
        tutoringId:
          type: string
          description: ID de la tutoría
        datetime:
          type: string
          description: Fecha y hora de la sesión
        durationMinutes:
          type: integer
          minimum: 1
          description: Duración en minutos
        locationLink:
          type: string
          description: Enlace de ubicación/reunión
        topicsCovered:
          type: string
          description: Temas a cubrir

    UpdateTutoringSessionStatusDto:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/TutoringsSessionStatus'
        notes:
          type: string
          description: Notas adicionales

    # Feedback schemas
    FeedbackDto:
      type: object
      properties:
        id:
          type: string
          description: ID único del feedback
        evaluator:
          $ref: '#/components/schemas/UserDto'
        evaluationDate:
          type: string
          format: date-time
          description: Fecha de evaluación
        tutoring:
          $ref: '#/components/schemas/TutoringDto'
        score:
          type: string
          description: Puntuación otorgada
        comments:
          type: string
          description: Comentarios del evaluador

    CreateFeedbackDto:
      type: object
      required:
        - tutoringId
        - score
        - comments
      properties:
        tutoringId:
          type: string
          description: ID de la tutoría
        score:
          type: string
          description: Puntuación
        comments:
          type: string
          description: Comentarios
      description: |
        Nota: El evaluatorId se asigna automáticamente desde el contexto del usuario autenticado.
        No es necesario enviarlo en el body de la petición.

    # Enums
    RolUsuario:
      type: string
      enum:
        - TUTOR
        - TUTORADO
        - ADMINISTRADOR
      description: Rol del usuario en el sistema

    RequestStatus:
      type: string
      enum:
        - ENVIADA
        - CONVERSANDO
        - APROBADA
        - ASIGNADA
        - RECHAZADA
      description: |
        Estado de la solicitud de tutoría:
        - ENVIADA: Estado inicial de una solicitud
        - CONVERSANDO: Estado intermedio durante negociación
        - APROBADA: Solicitud aprobada pero sin tutor asignado
        - ASIGNADA: Tutor asignado y tutoría creada
        - RECHAZADA: Solicitud rechazada

    TutoringStatus:
      type: string
      enum:
        - ACTIVA
        - COMPLETADA
        - CANCELADA
        - SOLICITUD_CANCELACION
      description: |
        Estado de la tutoría:
        - ACTIVA: Tutoría en curso
        - COMPLETADA: Tutoría finalizada exitosamente
        - CANCELADA: Tutoría cancelada
        - SOLICITUD_CANCELACION: Cancelación solicitada pero no aprobada

    TutoringsSessionStatus:
      type: string
      enum:
        - PROGRAMADA
        - REALIZADA
        - CANCELADA
      description: Estado de la sesión de tutoría

    # Response wrappers
    OkResponseChapter:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          $ref: '#/components/schemas/ChapterDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseChapterList:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChapterDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseTutoringRequest:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          $ref: '#/components/schemas/TutoringRequestDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseTutoringRequestList:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: array
          items:
            $ref: '#/components/schemas/TutoringRequestDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseTutoring:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          $ref: '#/components/schemas/TutoringDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseTutoringSession:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          $ref: '#/components/schemas/TutoringSessionDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseFeedback:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          $ref: '#/components/schemas/FeedbackDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    ErrorResponseDto:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de error
        errors:
          type: object
          additionalProperties:
            type: string
          description: Detalles específicos de errores de validación
        timestamp:
          type: string
          format: date-time
          description: Timestamp del error

    AuthenticationErrorDto:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de error de autenticación
          example: "Authorization header is required"
        timestamp:
          type: string
          format: date-time
          description: Timestamp del error
          example: "2024-01-15T10:30:00Z"

    # Statistics schemas
    DashboardStatisticsResponseDto:
      type: object
      properties:
        requestsByStatus:
          type: object
          additionalProperties:
            type: integer
            format: int64
          description: Número de solicitudes por estado
          example:
            ENVIADA: 5
            APROBADA: 3
            ASIGNADA: 10
            RECHAZADA: 2
        tutoringsByStatus:
          type: object
          additionalProperties:
            type: integer
            format: int64
          description: Número de tutorías por estado
          example:
            ACTIVA: 8
            COMPLETADA: 15
            CANCELADA: 2
        activeTutorsByChapter:
          type: object
          additionalProperties:
            type: integer
            format: int64
          description: Número de tutores activos por capítulo
          example:
            "Chapter 1": 5
            "Chapter 2": 3
            "Chapter 3": 7

    OkResponseUser:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          $ref: '#/components/schemas/UserDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseSkill:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          $ref: '#/components/schemas/SkillDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseSkillList:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: array
          items:
            $ref: '#/components/schemas/SkillDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseVoid:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: object
          nullable: true
          description: Datos de respuesta (null para operaciones void)
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    MyRequestsResponseDto:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/TutoringRequestDto'
          description: Solicitudes de tutoría del usuario
        tutoringsAsTutor:
          type: array
          items:
            $ref: '#/components/schemas/TutoringDto'
          description: Tutorías donde el usuario es tutor
        tutoringsAsTutee:
          type: array
          items:
            $ref: '#/components/schemas/TutoringDto'
          description: Tutorías donde el usuario es tutorado

    OkResponseMyRequests:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          $ref: '#/components/schemas/MyRequestsResponseDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseProfile:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: object
          properties:
            id:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
            role:
              type: string
            chapterId:
              type: string
            activeTutoringLimit:
              type: integer
        timestamp:
          type: string
          format: date-time

    OkResponsePermissions:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: object
          properties:
            isAdmin:
              type: boolean
            canActAsTutor:
              type: boolean
            canRequestTutoring:
              type: boolean
            hasStudentRole:
              type: boolean
            hasTutorRole:
              type: boolean
            hasAdminRole:
              type: boolean
        timestamp:
          type: string
          format: date-time

    OkResponseContextStatus:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: object
          properties:
            hasAuthenticatedUser:
              type: boolean
            contextAvailable:
              type: boolean
            userId:
              type: string
            userEmail:
              type: string
            userRole:
              type: string
        timestamp:
          type: string
          format: date-time

    OkResponseAdminInfo:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: object
          properties:
            adminUserId:
              type: string
            adminEmail:
              type: string
            logInfo:
              type: string
            accessTime:
              type: integer
              format: int64
        timestamp:
          type: string
          format: date-time

    OkResponseAccessCheck:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: object
          properties:
            requestedUserId:
              type: string
            currentUserId:
              type: string
            canAccess:
              type: boolean
            isOwnResource:
              type: boolean
            isAdmin:
              type: boolean
            accessValidation:
              type: string
              enum: [GRANTED, DENIED]
        timestamp:
          type: string
          format: date-time

    OkResponsePublicInfo:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: object
          properties:
            endpoint:
              type: string
            timestamp:
              type: integer
              format: int64
            authenticatedUser:
              type: string
              nullable: true
            userRole:
              type: string
              nullable: true
        timestamp:
          type: string
          format: date-time

    # New schemas for v2.0 features
    TutoringDetailDto:
      type: object
      properties:
        id:
          type: string
          description: ID único de la tutoría
        tutor:
          $ref: '#/components/schemas/UserDto'
        tutee:
          $ref: '#/components/schemas/UserDto'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillDto'
        startDate:
          type: string
          format: date-time
          description: Fecha de inicio
        expectedEndDate:
          type: string
          format: date-time
          description: Fecha esperada de finalización
        status:
          $ref: '#/components/schemas/TutoringStatus'
        objectives:
          type: string
          description: Objetivos de la tutoría
        finalActUrl:
          type: string
          description: URL del acta final de la tutoría
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/TutoringSessionDto'
          description: Lista de sesiones asociadas
        feedbacks:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackDto'
          description: Lista de feedbacks recibidos

    UserWithTutoringCountDto:
      type: object
      properties:
        id:
          type: string
          description: ID único del usuario
        firstName:
          type: string
          description: Nombre del usuario
        lastName:
          type: string
          description: Apellido del usuario
        email:
          type: string
          format: email
          description: Correo electrónico del usuario
        slackId:
          type: string
          description: ID de Slack del usuario
        chapter:
          $ref: '#/components/schemas/ChapterDto'
        rol:
          $ref: '#/components/schemas/RolUsuario'
        activeTutoringLimit:
          type: integer
          description: Límite de tutorías activas
        seniority:
          type: integer
          description: Nivel de seniority del usuario
        activeTutoringCount:
          type: integer
          description: Número actual de tutorías activas

    OkResponseTutoringDetail:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          $ref: '#/components/schemas/TutoringDetailDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseTutoringList:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: array
          items:
            $ref: '#/components/schemas/TutoringDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta

    OkResponseUserWithTutoringCountList:
      type: object
      properties:
        message:
          type: string
          description: Mensaje de respuesta
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserWithTutoringCountDto'
        timestamp:
          type: string
          format: date-time
          description: Timestamp de la respuesta